<?php

namespace {{ projectName }}\Domain\Workflow\{{ entityName }}\Listener;

use Sfynx\DddBundle\Layer\Domain\Generalisation\Observer\ObservableInterface;
use Sfynx\DddBundle\Layer\Domain\Generalisation\Observer\ObserverInterface;
use {{ projectName }}\Application\{{ entityName }}\Command\UpdateCommand;
use Sfynx\DddBundle\Layer\Domain\ValueObject\IdVO;
{% for  data in valueObjects %}
use {{ projectName }}\Domain\ValueObject\{{ data.name}};
{% endfor %}

/**
 * Class WFGenerateVOListener
 *
 * @package DemoApiContext\Domain\Workflow\Actor\Listener
 *
 * TODO change all array with SqlQueue and test performance
 */
class WFGenerateVOListener implements ObserverInterface
{

{% for field in fields %}
    private ${{ field.name|lower }};
{% endfor %}



    /**
     * @param WFObjectEvent $event
     */
    public function update(ObservableInterface $wfHandler)
    {
{% for field in fields %}
        $this->set{{ field.name|capitalize }}($wfHandler);
{% endfor %}
}

{% for field in fields %}
    public function set{{ field.name|capitalize }}(ObservableInterface $wfHandler) {
    {% if field.type=="id" %}
        if ($wfHandler->getCommand() instanceof UpdateCommand) {
{% if field.voName is defined %}
    $wfHandler->data->{{ field.name }}[] = new {{ field.voName }}($wfHandler->getCommand()->get{{ field.name|capitalize }}());
{% else %}
    $wfHandler->data->{{ field.name }}[] = $wfHandler->getCommand()->get{{ field.name|capitalize }}();
{% endif %}
        }
    {% elseif field.type == "valueObject" %}

            {% set parameters = "" %}
            {% for name, data in valueObjects %}
                {% if name == field.voName %}
                    {% for vofield in data.fields %}
                        {% set parameters = parameters ~ "$wfHandler->getCommand()->get" ~ field.name|capitalize ~"()['"~ vofield.name ~"']," %}
                    {% endfor %}
                {% endif %}
            {% endfor %}

            $wfHandler->data->{{ field.name }}[] = new {{ field.voName }}({{ parameters|trim(',') }});
    {% else %}
            $wfHandler->data->{{ field.name }}[] = $wfHandler->getCommand()->get{{ field.name|capitalize }}();

    {% endif %}
    return $this;
    }
{% endfor %}
}
