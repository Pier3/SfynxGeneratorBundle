<?php
declare(strict_types = 1);

namespace {{ projectName }}\Domain\Workflow\{{ entityName }}\Listener;

use Sfynx\DddBundle\Layer\Domain\Generalisation\Observer\ObservableInterface;
use Sfynx\DddBundle\Layer\Domain\Generalisation\Observer\ObserverInterface;
use Sfynx\DddBundle\Layer\Domain\Service\Generalisation\Manager\ManagerInterface;
use Sfynx\DddBundle\Layer\Infrastructure\Logger\Generalisation\TraitLogger;

/**
 * Class WFPublishEvent
 *
 * @category {{ projectName }}
 * @package Domain
 * @subpackage Workflow\Listener
 */
class WFPublishEvent implements ObserverInterface
{
    use TraitLogger;

    /** @var ManagerInterface $manager */
    protected $manager;

    /**
     * Constructor
     *
     * @param ManagerInterface $manager
     */
    public function __construct(ManagerInterface $manager)
    {
        $this->manager = $manager;
    }

    /**
     * Run all listener parts. Entry point of the listener.
     * @param ObservableInterface $observable
     */
    public function update(ObservableInterface $observable)
    {
        //todo: fill this method or remove it if useless.
    }
}
