<?php
declare(strict_types = 1);

namespace {{ projectName }}\InfrastructureBundle\DependencyInjection\Compiler;

use Symfony\Component\DependencyInjection\Compiler\CompilerPassInterface;
use Symfony\Component\DependencyInjection\ContainerBuilder;
use Symfony\Component\DependencyInjection\Reference;

class CreateDynamicConnectionPass implements CompilerPassInterface
{
    const TYPE_DBMS = [
        'ORM' => 'doctrine.orm.entity_manager',
        'ODM' => 'doctrine_mongodb.odm.default_document_manager',
        'COUCHDB' => 'doctrine_couchdb.odm.default_document_manager'
    ];

    /**
     * You can modify the container here before it is dumped to PHP code.
     *
     * @param ContainerBuilder $container
     */
    public function process(ContainerBuilder $container)
    {
        // get params
        $type = strtoupper($container->getParameter('database_type'));

        // create service
        $class = $container->getParameter("project.dddcontext.listener.kernel.request.dynamic_database_${type}.class");
        $id = 'project.dddcontext.listener.kernel.request.dynamic_database';
        // set service
        $definition = $container->getDefinition($id);
        $definition->setClass($class);
        $definition->addArgument(new Reference(self::TYPE_DBMS[$type]);
    }
}
