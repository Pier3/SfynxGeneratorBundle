<?php

namespace {{ projectName }}\Presentation\Adapter\{{ entityName }}\Command;

use {{ projectName }}\Application\{{ entityName }}\Query\{{ entityName }}Query;
use Sfynx\DddBundle\Layer\Presentation\Adapter\Generalisation\CommandAdapterInterface;
use Sfynx\DddBundle\Layer\Presentation\Request\Generalisation\CommandRequestInterface;

/**
 * Class UpdateCommandAdapter.
 *
 * @category   {{ projectName }}
 * @package    Presentation
 * @subpackage Adapter
 */
class {{ actionName }}QueryAdapter implements CommandAdapterInterface
{
    /**
     * @param CommandRequestInterface $request
     * @return {{ actionName }}Query
     */
    public function createQueryFromRequest(QueryRequestInterface $request)
    {
        $parameters = $request->getRequestParameters();

        return new {{ actionName }}Query(
            {% for field in entityFields %}
                $parameters["{{ field.name }}"]{% if loop.index < entityFields|length %},{% endif %}

            {% endfor %});
    }
}
