<?php
declare(strict_types = 1);

namespace {{ projectName }}\Presentation\Adapter\{{ entityName }}\Command;

use {{ projectName }}\Application\{{ entityName }}\Command\PatchCommand;
use Sfynx\DddBundle\Layer\Presentation\Adapter\Generalisation\CommandAdapterInterface;
use Sfynx\DddBundle\Layer\Presentation\Request\Generalisation\CommandRequestInterface;

/**
 * Class PatchCommandAdapter.
 *
 * @category   {{ projectName }}
 * @package    Presentation
 * @subpackage Adapter\Command
 */
class PatchCommandAdapter implements CommandAdapterInterface
{
    /**
     * @param CommandRequestInterface $request
     * @return PatchCommand
     */
    public function createCommandFromRequest(CommandRequestInterface $request)
    {
        $parameters = $request->getRequestParameters();

        return new PatchCommand({% for field in entityFields %}$parameters['{{ field.name }}']{% if loop.index < entityFields|length %}, {% endif %}{% endfor %});
    }
}
