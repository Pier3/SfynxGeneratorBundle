<?php
declare(strict_types = 1);

namespace {{ projectName }}\PresentationBundle\DependencyInjection\Compiler;

use Symfony\Component\DependencyInjection\ContainerBuilder;
use Symfony\Component\DependencyInjection\Compiler\CompilerPassInterface;
use Symfony\Component\DependencyInjection\Exception\{
    InvalidArgumentException,
    ServiceNotFoundException
};

/**
 * This is the class that loads and manages your bundle configuration
 *
 * To learn more see {@link http://symfony.com/doc/current/cookbook/bundles/extension.html}
 *
 * @category {{ projectName }}
 * @package PresentationBundle
 * @subpackage DependencyInjection\Compiler
 */
class ResettingListenersPass implements CompilerPassInterface
{
    /**
     * You can modify the container here before it is dumped to PHP code.
     *
     * @param ContainerBuilder $container
     * @throws ServiceNotFoundException
     * @throws InvalidArgumentException
     */
    public function process(ContainerBuilder $container)
    {
        $definition = $container->findDefinition('event_dispatcher');
        $tags = $container->findTaggedServiceIds('project.event_subscriber');

        foreach ($tags as $id => $attributes) {
            $definition->addMethodCall('addSubscriber', [$container->getDefinition($id)]);
        }
    }
}
