<?php
declare(strict_types = 1);

namespace  Tests\Application\{{ entityName }}\Command;

use {{ projectName }}\Application\{{ entityName }}\Command\PatchCommand;
use Sfynx\DddBundle\Layer\Application\Generalisation\Interfaces\CommandInterface;

class PatchCommandTest extends \PHPUnit_Framework_TestCase
{
    protected $command;
    protected $message;
    protected $transaction;
    protected $jsonRequest;

    public function setUp()
    {
{% set constructorArgs = "" %}
{% for field in entityFields %}
        $this->{{ field.name }} = "123456";
{% set constructorArgs = constructorArgs ~ "$this->" ~ field.name ~ ", " %}
{% endfor %}

        $this->command = new PatchCommand({{ constructorArgs|trim(', ') }});
    }

    public function testInterface()
    {
        $this->assertInstanceOf(CommandInterface::class, $this->command);
    }

    public function testGetters()
    {
        $this->assertEquals($this->libelle, $this->command->getLibelle());
        $this->assertEquals($this->indicatif, $this->command->getIndicatif());
        $this->assertEquals($this->iso, $this->command->getIso());
        $this->assertEquals($this->selectable, $this->command->getSelectable());
        $this->assertEquals($this->reference, $this->command->getReference());
    }
}
