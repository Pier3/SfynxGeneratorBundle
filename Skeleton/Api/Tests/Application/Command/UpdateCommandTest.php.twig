<?php
declare(strict_types = 1);

namespace  Tests\Application\{{ entityName }}\Command;

use {{ projectName }}\Application\{{ entityName }}\Command\UpdateCommand;
use Sfynx\DddBundle\Layer\Application\Generalisation\Interfaces\CommandInterface;

/**
* Class UpdateCommandTest
* This class permits to test the UpdateCommand class
* @category {{ projectName }}
* @package Test
* @subpackage Application\Command
**/
class UpdateCommandTest extends \PHPUnit_Framework_TestCase
{
    protected $command;
    protected $message;
    protected $transaction;
    protected $jsonRequest;

    /**
    * Configure the tests
    */
    public function setUp()
    {
{% set constructorArgs = "" %}
{% for field in entityFields %}
{% set constructorArgs = constructorArgs ~ "                                        " ~ "$this->" ~ field.name ~ ",\n" %}
{% endfor %}

        $this->command = new UpdateCommand(
{{ constructorArgs|trim(',\n') }}
                          );
    }

    /**
    * Test UpdateCommand is instanceof CommandInterface
    */
    public function testInterface()
    {
        $this->assertInstanceOf(CommandInterface::class, $this->command);
    }

    public function testGetters()
    {
        $this->assertEquals($this->entityId, $this->command->getEntityId());
        $this->assertEquals($this->libelle, $this->command->getLibelle());
        $this->assertEquals($this->indicatif, $this->command->getIndicatif());
        $this->assertEquals($this->iso, $this->command->getIso());
        $this->assertEquals($this->selectable, $this->command->getSelectable());
        $this->assertEquals($this->reference, $this->command->getReference());
    }
}
