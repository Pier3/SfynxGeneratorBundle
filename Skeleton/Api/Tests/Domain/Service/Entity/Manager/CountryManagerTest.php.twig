<?php

namespace Tests\Domain\Service\Manager\CountryManager;


use DemoCountry\Domain\Entity\Country;
use DemoCountry\Domain\Service\Country\Manager\CountryManager;
use DemoCountry\Infrastructure\Persistence\Repository\Country\Orm\GetRepository;
use Phake;
use ReflectionClass;
use Sfynx\DddBundle\Layer\Domain\Service\Generalisation\Factory\RepositoryFactoryInterface;
use Sfynx\DddBundle\Layer\Domain\ValueObject\IdVO;
use Sfynx\DddBundle\Layer\Infrastructure\Logger\Logger;
use Sfynx\DddBundle\Layer\Infrastructure\Persistence\Generalisation\CouchDB\SaveRepository;
use Sfynx\DddBundle\Layer\Infrastructure\Validator\Constraint\IdValidator;


class CountryManagerTest extends  \PHPUnit_Framework_TestCase
{
    protected $emailManager;
    protected $repo;

    public function setUp()
    {


        $this->repo = Phake::mock(RepositoryFactoryInterface::class);
        $this->saveReposiroty = Phake::mock(SaveRepository::class);
        $this->getOneRepository = Phake::mock(GetRepository::class);
        $this->entity = Phake::mock(Country::class);
        $logger = Phake::mock(Logger::class);



        $this->countryManager = new CountryManager($this->repo);
        $this->countryManager->setLogger($logger);


        Phake::when($this->repo)->buildRepository(Phake::anyParameters())->thenReturn($this->saveReposiroty);
        Phake::when($this->saveReposiroty)->execute(Phake::anyParameters())->thenReturn($this->entity);
        Phake::when($this->repo)->create(Phake::anyParameters())->thenReturn(null);
    }

    public function testCreate()
    {
        $this->countryManager->create(null,"France","033","fr",true,"0001");
        Phake::verify($this->repo)->buildRepository(RepositoryFactoryInterface::NEW_REPOSITORY);
    }


    public function testUpdate()
    {
        $this->countryManager->update(new IdVO(),"France","033","fr",true,"0001");
        Phake::verify($this->repo)->buildRepository(RepositoryFactoryInterface::UPDATE_REPOSITORY);
    }

    //can't test if repository load or not an Country...
}
