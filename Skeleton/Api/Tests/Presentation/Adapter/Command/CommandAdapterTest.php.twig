<?php
declare(strict_types = 1);

namespace Tests\Presentation\Adapter\{{ entityName }}\Command;

use {{ projectName }}\Presentation\Adapter\{{ entityName }}\Command\UpdateCommandAdapter;
use {{ projectName }}\Presentation\Request\{{ entityName }}\Command\UpdateRequest;
use Sfynx\DddBundle\Layer\Application\Generalisation\Interfaces\CommandInterface;
use Sfynx\DddBundle\Layer\Presentation\Adapter\Generalisation\CommandAdapterInterface;
use Sfynx\DddBundle\Layer\Presentation\Request\Generalisation\CommandRequestInterface;
use \Phake;

/**
* Class {{ actionName }}CommandAdapterTest
* This class permits to test the {{ actionName }}CommandAdapter class
* @category {{ projectName }}
* @package Test
* @subpackage Presentation\Adapter\Command
**/
class {{ actionName }}CommandAdapterTest extends \PHPUnit_Framework_TestCase
{
    /**
     * @var UpdateCommandAdapter
     */
    protected $adapter;

    /**
     * @var CommandRequestInterface
     */
    protected $request;

    /**
    * Configure the tests
    */
    public function setUp()
    {
        $this->adapter = new UpdateCommandAdapter();
        $this->request  = Phake::mock(UpdateRequest::class);
    }

    /**
    * Test if adapter implements CommandAdapterInterface
    */
    public function testInterfaces()
    {
        $this->assertInstanceOf(CommandAdapterInterface::class, $this->adapter);
    }

    /**
    * Test CreateCommandFromRequest method
    */
    public function testCreateCommandFromRequest()
    {
        $this->adapter->createCommandFromRequest($this->request);
        Phake::verify($this->request, Phake::times(1))->getRequestParameters();

    }
}
