<?php

namespace {{  projectName }}\InfrastructureBundle\DependencyInjection\Compiler;

use Symfony\Component\DependencyInjection\Compiler\CompilerPassInterface;
use Symfony\Component\DependencyInjection\ContainerBuilder;
use Symfony\Component\DependencyInjection\Reference;

class CreateRepositoryFactoryPass implements CompilerPassInterface
{

    /**
     * You can modify the container here before it is dumped to PHP code.
     *
     * @param ContainerBuilder $container
     */
    public function process(ContainerBuilder $container)
    {
        // get parameter
        $type = $container->getParameter('database_type');
        $class = $container->getParameter("project.{{ projectName }}.{{ entityName|lower }}.${type}.repository.factory.class");
        $id = 'project.{{ projectName }}.actor.repository.factory';
        // set service
        $definition = $container->register($id, $class);
        if ('orm' === $type) {
            $definition->addArgument(new Reference('doctrine.orm.entity_manager'));
        }
        if ('odm' === $type) {
            $definition->addArgument(new Reference('doctrine_mongodb.odm.default_document_manager'));
        }
        if ('couchdb' === $type) {
            $definition->addArgument(new Reference('doctrine_couchdb.odm.default_document_manager'));
        }
     }
}
